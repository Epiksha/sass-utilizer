@use 'breakpoint-direction' as *;
@use 'breakpoint-dive' as *;
@use 'breakpoint-increment' as *;
@use 'breakpoint-pseudo' as *;

// Create breakpoints
@mixin breakpointify(
    $label,
    $property,
    $value,
    $negatives,
    $directions,
    $increments,
    $pseudos,
    $dives,
    $bpConfig
) {
    $breakpoints: () !default;
    $paradigm: min-width !default;

    @each $bpConfigLabel, $bpConfigValue in $bpConfig {
        @if $bpConfigLabel == breakpoints {
            $breakpoints: $bpConfigValue;
        } @else if ($bpConfigLabel == paradigm) {
            $paradigm: $bpConfigValue;
        }
    }

    $utilityBreakpointParadigm: min-width !default;

    @each $breakpointLabel, $breakpointValue in $breakpoints {
        .#{$breakpointLabel}\:#{$label} {
            @media (#{$paradigm}: $breakpointValue) {
                #{$property}: $value !important;
            }
        }

        @if $increments {
            @include breakpoint-incrementify($label, $property, $value, $negatives, $increments, $pseudos, $dives, $breakpointLabel, $breakpointValue, $paradigm);
        }

        @if $directions {
            @include breakpoint-directionify($label, $property, $value, $negatives, $increments, $pseudos, $dives, $breakpointLabel, $breakpointValue, $paradigm);
        }

        @if $pseudos {
            @include breakpoint-pseudify($label, $property, $value, $pseudos, $dives, $breakpointLabel, $breakpointValue, $paradigm);
        }

        @if $dives {
            @include breakpoint-diver($label, $property, $value, $breakpointLabel, $breakpointValue, $paradigm);
        }
    }
};